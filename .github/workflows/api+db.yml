name: Check API Status and add data to DB
# Use workflow dispatch for manual triggering and schedule for timed execution
on:
  workflow_dispatch:
  # schedule:
  # - cron: '*/60 * * * *'

# Declare the variables
env:
  NAME_OF_TOOL: AEGIS
  API_ENDPOINT: https://httpstat.us/404
  EMAIL_RECIPIENTS: conales.jt@pg.com

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
    - name: Check API Status
      id: check_api_status
      run: |
        response=$(curl -s -o /dev/null -w "%{http_code}" ${{ env.API_ENDPOINT }})
        echo "STATE=${response}" >> $GITHUB_ENV

        # Set the time
        DATETIME=$(date +"%Y-%m-%d %H:%M:%S")
        echo "DATETIME=${DATETIME}" >> $GITHUB_ENV

        # Save state and set output using environment files
        echo "DATETIME=${DATETIME}" >> $GITHUB_ENV
        echo "API_STATUS=${response}" >> $GITHUB_ENV
        echo "DATETIME=${DATETIME}" >> $GITHUB_ENV

        # Save state to environment files for use in subsequent steps
        echo "${DATETIME}" > $GITHUB_ENV/DATETIME
        echo "${response}" > $GITHUB_ENV/API_STATUS
        echo "::set-env name=DATETIME::${DATETIME}"
        echo "::set-env name=API_STATUS::${response}"

  insert-mongo-data:
    needs: ci
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install pymongo
      run: |
        pip install pymongo

    - name: Insert data into MongoDB
      env:
        MONGODB_URI: ${{ secrets.MONGODB_CONNECTION_STRING }}
        DATABASE_NAME: FTATLogs
        COLLECTION_NAME: "FTAT Logs"
        NAME: "${{ env.NAME_OF_TOOL }}"
        STATUS: "${{ needs.ci.outputs.API_STATUS }}"
        DATETIME: "${{ needs.ci.outputs.DATETIME }}"
      run: |
        python -c "from pymongo import MongoClient; \
        from datetime import datetime; \
        import os; \
        print('Connecting to MongoDB...'); \
        client = MongoClient(os.environ['MONGODB_URI']); \
        db = client[os.environ['DATABASE_NAME']]; \
        collection = db[os.environ['COLLECTION_NAME']]; \
        dt = datetime.strptime(os.environ['DATETIME'], '%Y-%m-%d %H:%M:%S'); \
        document = {'name': os.environ['NAME'], 'status': os.environ['STATUS'], 'datetime': dt}; \
        collection.insert_one(document); \
        print('Data inserted successfully.')"
