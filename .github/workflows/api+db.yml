on:
  # Use workflow dispatch for manual triggering and schedule for timed execution
  workflow_dispatch:
  # schedule:
  # - cron: '*/60 * * * *'

# Use this file as a template to create new workflows for API endpoint status check
name: Check API Status and add data to DB

# Declare the variables
env:
  NAME_OF_TOOL: AEGIS
  API_ENDPOINT: https://httpstat.us/404
  EMAIL_RECIPIENTS: conales.jt@pg.com

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Check API Status
        id: api_status
        run: |
          response=$(curl -s -o /dev/null -w "%{http_code}" ${{ env.API_ENDPOINT }})
          echo "STATE=${response}" >> $GITHUB_ENV
          echo "DATETIME=$(date +"%Y-%m-%d %H:%M:%S")" >> $GITHUB_ENV

      - name: Set Output Variables
        run: |
          echo "::set-output name=api_status::${{ env.STATE }}"
          echo "::set-output name=datetime::${{ env.DATETIME }}"

  insert-mongo-data:
    needs: ci
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install pymongo
        run: |
          pip install pymongo

      - name: Insert data into MongoDB
        env:
          MONGODB_URI: ${{ secrets.MONGODB_CONNECTION_STRING }}
          DATABASE_NAME: FTATLogs
          COLLECTION_NAME: "FTAT Logs"
          NAME: "${{ env.NAME_OF_TOOL }}"
          STATUS: "${{ needs.ci.outputs.api_status }}"
          DATETIME: "${{ needs.ci.outputs.datetime }}"
        run: |
          python -c "from pymongo import MongoClient; \
          from datetime import datetime; \
          import os; \
          print('Connecting to MongoDB...'); \
          client = MongoClient(os.environ['MONGODB_URI']); \
          db = client[os.environ['DATABASE_NAME']]; \
          collection = db[os.environ['COLLECTION_NAME']]; \
          dt = datetime.strptime(os.environ['DATETIME'], '%Y-%m-%d %H:%M:%S') if os.environ['DATETIME'] else datetime.now(); \
          document = {'name': os.environ['NAME'], 'status': os.environ['STATUS'], 'datetime': dt}; \
          collection.insert_one(document); \
          print('Data inserted successfully.')"
