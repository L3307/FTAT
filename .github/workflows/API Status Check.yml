on:
  workflow_dispatch:
  # schedule:
  # - cron: '*/60 * * * *'
    
# Use this file as a template to create new workflows for API endpoint status check
name: Check API Status Main

# Declare the variables
env:
 NAME_OF_TOOL: AEGIS
 API_ENDPOINT: http://gadc-automat01.na.pg.com:5101/isAlive
 EMAIL_RECIPIENTS: conales.jt@pg.com

jobs:
      
  check_api_status:
    runs-on: ubuntu-latest
    steps:
      #this step is used to check source IP address. Remove when no longer required
      - name: ðŸ›’ Checkout
        uses: actions/checkout@v2
      #this step is used to check source IP address. Remove when no longer required
      - name: ðŸ”Ž Check IP
        run: curl https://api.ipify.org
        
      - name: Check API Status
        id: api_status
        run: |
          response=$(curl -s -o /dev/null -w "%{http_code}" ${{ env.API_ENDPOINT }})
          echo "STATE=${response}" >> $GITHUB_ENV

      - name: Use API Status
        id: api_status_check
        run: |
          if [ "${{ env.STATE }}" = "200" ]; then
            echo "API endpoint is up and running"
            echo "send_email=false" >> $GITHUB_ENV
          else
            echo "API endpoint is not accessible"
            echo "send_email=true" >> $GITHUB_ENV
          fi

      - name: Send Email
        if: env.send_email == 'true'
        uses: cinotify/github-action@v1.6.0
        with:
          to: "${{ env.EMAIL_RECIPIENTS }}"
          subject: "[FPS Tools Availability Tacker] | ${{ env.NAME_OF_TOOL }} API Endpoint Status"
          body: "The ${{ env.NAME_OF_TOOL }} API endpoint is not accessible. The HTTP status code is ${{ env.STATE }}. Please investigate."
          type: "text/html"
